// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  username      String
  email         String     @unique
  password      String
  trashNotes    Trash[]
  notes         Note[]
  archivedNotes Archived[]
}

model Note {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  tags      Tag[]
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?

}

model Archived {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  tags      Tag[]
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Trash {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  tags      Tag[]
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Tag {
  id         Int       @id @default(autoincrement())
  tagName    String
  Note       Note?     @relation(fields: [noteId], references: [id])
  noteId     Int?
  Archived   Archived? @relation(fields: [archivedId], references: [id])
  archivedId Int?
  Trash      Trash?    @relation(fields: [trashId], references: [id])
  trashId    Int?
}
